#include<stdio.h>

int brace,brack,paren;

void in_quote(int c);
void in_comment(void);
void search(int c);
void next_line(void);

int main(){
	int c;
	while((c = getchar()) != EOF){
		if(c == '/'){
			if((c == getchar()) == '*' ){
				in_comment();
			}else if(c == '/'){
				next_line();
			}else{
				search(c);
			}
		}else if(c == '"'){
			in_quote(c);
		}else{
			search(c);
		}
		if(brace < 0){
			printf("unbalanced braces\n");
			brace = 0;
		}else if(brack < 0){
			printf("unbalanced bracks\n");
			brack = 0;
		}else if(paren < 0){
			printf("unbalanced parens\n");
			paren = 0;
		}
	}
	/*有一个重要的问题：
		在while循环外的检验>0情况只有ctrl+z后才能体现。
		在观察结果时应该注意
	*/ 
	if(brace > 0){
		printf("unbalanced braces\n");
	}else if(brack > 0){
		printf("unbalanced bracks\n");
	}else if(paren > 0){
		printf("unbalanced parens\n");
	}
	return 0;
}

void in_quote(int c){
	int d;
	while((d = getchar()) != c){
		;
	}
}

void in_comment(void){
	int c,d;
	c = getchar();
	d = getchar();
	while(c != '*' || d != '/'){
		c = d;
		d = getchar();
	}
}

void next_line(void){
	int c;
	c = getchar();
	while(c != '\n'){
		c = getchar();
	}
}

void search(int c){
	if(c == '{'){
		++brace;
	}else if(c == '}'){
		--brace;
	}else if(c == '['){
		++brack;
	}else if(c == ']'){
		--brack;
	}else if(c == '('){
		++paren;
	}else if(c == ')'){
		--paren;
	}
}
