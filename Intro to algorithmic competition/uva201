#include<stdio.h>
#include<string.h>
#define maxn 10
int n,m,v[maxn][maxn],h[maxn][maxn];
int check(int len)
{
	int count = 0,num;
	for(int i = 1;i<= n-len;i++){
		for(int  j = 1;j <= n-len;j++){
			num = 0;
			for(int k = 0;k<=len-1;k++){
				if(v[i+k][j] == 1 && h[i][j+k] == 1 && v[i+k][j+len] == 1 && h[i+len][j+k] == 1)
					num += 4;
			}
			if(num == len*4){
				count++;
			}
		}
	}
	return count;
}
int main()
{
	int kase = 0;
	while(scanf("%d%d",&n,&m) == 2 && n>=2 && n<=9){
		char arr[maxn];
		int a,b,num=0;
		memset(v,0,sizeof(v));
		memset(h,0,sizeof(h));
		while(m--){
			memset(arr,0,sizeof(arr));
			a = 0,b= 0;
			scanf("%s",arr);
			if(arr[0] == 'H'){
				scanf("%d%d",&a,&b);
				h[a][b] = 1;
			}else if(arr[0] == 'V'){
				scanf("%d%d",&a,&b);
				v[b][a] = 1;
			}
		}
		++kase;
		if(kase > 1){
			printf("\n**********************************\n\n");
		}
		printf("Problem #%d\n\n",kase);
	for(int i=1;i<=n-1;i++){
		if(check(i) != 0 ){
			printf("%d square (s) of size %d\n",check(i),i);
		}else{
			++num;
			if(num == n-1)printf("No completed squares can be found.\n");
		}
	}
	}
	return 0;
 } 
